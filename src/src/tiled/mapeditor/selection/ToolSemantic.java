/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package tiled.mapeditor.selection;

import tiled.mapeditor.MapEditor;

/**
 * A tool semantic gives a tool a meaning. A tool is typically represented by
 * a single button in a tool bar, and is therefore percieved as atomic by the
 * user. However, the same tool might need to behave differently in different
 * circumstances, and therefore more than one ToolSemantic will be associated
 * with that tool.
 * For instance, a selection tool might have different semantics depending on
 * the type of layer that is currently selected. Selection might work different
 * for different layer types.
 * The ToolSemantic instance will be registered as listener for mouse events
 * with a MapView, which allows it to react to events generated by it
 * @author upachler
 */
public abstract class ToolSemantic {
    private MapEditor editor;
    
    ToolSemantic(MapEditor editor){
        this.editor = editor;
    }
    
    /**
     * Activates this tool semantic. This basically means that the
     * user performed an action that makes this semantic the
     * currently active one (like selecting the tool associated with
     * this semantic in the tool bar).
     */
    public void activate(){
    }
    
    /**
     * Deactivates this tool semantic. This is called when the user selects
     * a different tool from the tool bar, or if a different semantic becomes
     * active for that tool.
     */
    public void deactivate(){        
    }

    public MapEditor getEditor() {
        return editor;
    }
    
    
}
